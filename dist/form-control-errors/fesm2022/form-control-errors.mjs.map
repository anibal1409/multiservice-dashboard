{"version":3,"file":"form-control-errors.mjs","sources":["../../../projects/form-control-errors/src/lib/common-messajes-token.ts","../../../projects/form-control-errors/src/lib/feature-messages-token.ts","../../../projects/form-control-errors/src/lib/form-control-errors.component.ts","../../../projects/form-control-errors/src/lib/utils/builtin-errors-parser.ts","../../../projects/form-control-errors/src/lib/form-control-errors.directive.ts","../../../projects/form-control-errors/src/lib/form-control-errors.module.ts","../../../projects/form-control-errors/src/form-control-errors.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { ErrorMessages } from './models';\n\nexport const COMMON_MESSAGES = new InjectionToken<ErrorMessages>(\n  'common.messages'\n);\n","import { InjectionToken } from '@angular/core';\n\nimport { ErrorMessages } from './models';\n\nexport const FEATURE_MESSAGES = new InjectionToken<ErrorMessages>(\n  'common.messages'\n);\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'form-control-errors',\n  template: `{{ message }}`,\n  styles: [],\n})\nexport class FormControlErrorsComponent {\n  @Input()\n  message = '';\n}\n","import { ValidationErrors } from '@angular/forms';\n\nexport interface ParsedError {\n  message: string;\n  args?: any;\n}\n\n/**\n * Estandariza los errores generados por los validadores propios de Angular\n * para ser utilizacos en el servicio de internacionalizaci√≥n\n */\nexport function parseError(error: ValidationErrors): ParsedError {\n  const keyError = Object.keys(error)[0];\n  let args: any = {};\n  switch (keyError) {\n    case 'min':\n      args = { min: error[keyError].min };\n      break;\n    case 'max':\n      args = { max: error[keyError].max };\n      break;\n    case 'minlength':\n      args = { minlength: error[keyError].requiredLength };\n      break;\n    case 'maxlength':\n      args = { maxlength: error[keyError].requiredLength };\n      break;\n    default:\n      break;\n  }\n\n  return {\n    message: keyError,\n    args,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  HostListener,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControlName,\n  NgControl,\n  ValidationErrors,\n} from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { COMMON_MESSAGES } from './common-messajes-token';\nimport { FEATURE_MESSAGES } from './feature-messages-token';\nimport { FormControlErrorsComponent } from './form-control-errors.component';\nimport { parseError } from './utils';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[formControlErrors]',\n})\nexport class FormControlErrorsDirective implements OnInit, OnDestroy {\n  private errorInfoComponent: ComponentRef<FormControlErrorsComponent> | null =\n    null;\n  private control: AbstractControl | null = null;\n  private sub$ = new Subscription();\n\n  @HostListener('blur')\n  onBlur(): void {\n    if (this.control) {\n      this.validataStatus(this.control.status);\n    }\n  }\n\n  constructor(\n    private readonly componentFactoryResolver: ComponentFactoryResolver,\n    private readonly viewContainerRef: ViewContainerRef,\n    @Optional() private readonly formControlName: FormControlName,\n    @Optional() private readonly formControl: NgControl,\n    @Optional() @Inject(COMMON_MESSAGES) private readonly commonMessages: any,\n    @Optional() @Inject(FEATURE_MESSAGES) private readonly featureMessages: any\n  ) {}\n\n  ngOnInit(): void {\n    this.control = this.formControlName?.control || this.formControl?.control;\n\n    if (!this.control) {\n      throw new Error(\n        'No control found, `vrt2FormControlErrors` must be used with `formControlName` or `formControl`'\n      );\n    }\n    const factory = this.componentFactoryResolver.resolveComponentFactory(\n      FormControlErrorsComponent\n    );\n    this.errorInfoComponent = this.viewContainerRef.createComponent(factory);\n\n    this.sub$.add(\n      this.control.statusChanges?.subscribe((status) => {\n        this.validataStatus(status);\n      })\n    );\n\n    const container = (\n      this.viewContainerRef.element.nativeElement as HTMLElement\n    ).parentElement;\n\n    if (container) {\n      const errorc = container?.querySelector(\n        'form-control-errors'\n      ) as HTMLElement;\n      if (errorc) {\n        errorc.style.position = 'relative';\n        errorc.style.left = `0.2rem`;\n        errorc.style.fontSize = '0.8rem';\n        errorc.style.color = 'red';\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.unsubscribe();\n  }\n\n  validataStatus(status: string): void {\n    if (!this.errorInfoComponent) {\n      throw new Error('No error info component found');\n    }\n    if (['INVALID', 'DISABLED'].includes(status) && this.control?.touched) {\n      this.errorInfoComponent.instance.message = this.getMessage(\n        this.control.errors as ValidationErrors\n      );\n    } else if (status === 'VALID') {\n      this.errorInfoComponent.instance.message = '';\n    }\n  }\n\n  getMessage(errors: ValidationErrors) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { message = '', args } = parseError(errors);\n    const translateKey =\n      (this.featureMessages && this.featureMessages[message]) ||\n      (this.commonMessages && this.commonMessages[message]) ||\n      message;\n    return translateKey;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { COMMON_MESSAGES } from './common-messajes-token';\nimport { FEATURE_MESSAGES } from './feature-messages-token';\nimport { FormControlErrorsComponent } from './form-control-errors.component';\nimport { FormControlErrorsDirective } from './form-control-errors.directive';\nimport { ErrorMessages } from './models';\n\n@NgModule({\n  declarations: [FormControlErrorsComponent, FormControlErrorsDirective],\n  imports: [],\n  exports: [FormControlErrorsComponent, FormControlErrorsDirective],\n})\nexport class FormControlErrorsModule {\n  static forRoot(\n    commonMessages: ErrorMessages\n  ): ModuleWithProviders<FormControlErrorsModule> {\n    return {\n      ngModule: FormControlErrorsModule,\n      providers: [\n        {\n          provide: COMMON_MESSAGES,\n          useValue: commonMessages,\n        },\n      ],\n    };\n  }\n\n  static forChild(\n    featureMessages?: ErrorMessages\n  ): ModuleWithProviders<FormControlErrorsModule> {\n    return {\n      ngModule: FormControlErrorsModule,\n      providers: [\n        {\n          provide: FEATURE_MESSAGES,\n          useValue: featureMessages,\n        },\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}